#!/bin/bash
#
# Records the time it takes to compile an Android build.
# Nathan Forbes
#

if [ "`echo "$0" | grep "/bin/"`" != "" ]
then
    MYNAME="`basename $0`"
else
    MYNAME="$0"
fi

if [ "$1" = "-h" -o "$1" = "--help" ]
then
    echo "usage: $MYNAME [make target] [jobs]"
    echo
    echo "Example:"
    echo "    $MYNAME otapackage 4"
    echo
    echo "(Both [make target] and/or [jobs] can be left blank)"
    echo "If [make target] is not given:"
    echo "    Uses no target (runs just \`make')."
    echo "If [jobs] is not given:"
    echo "    Uses the default number of cores present on your machine."
    echo "Uses \`schedtool' if installed"
    exit 0
fi

if [ ! "$OUT" ]
then
    echo "Build environment not complete, run:"
    echo "    . build/envsetup.sh"
    echo "And then \`lunch' your product."
    exit 1
fi

DEFAULT_JOBS="`cat /proc/cpuinfo | grep "^processor" | wc -l`"

if [ "$#" = "0" ]
then
    JOBS=$DEFAULT_JOBS
    TARGET=
elif [ "$#" = "1" ]
then
    if (( $1 ))
    then
        JOBS="$1"
        TARGET=
    else
        JOBS=$DEFAULT_JOBS
        TARGET="$1"
    fi
elif [ "$#" = "2" ]
then
    for i in "$@"
    do
        if (( $i ))
        then
            JOBS="$i"
        else
            TARGET="$i"
        fi
    done
    if [ ! "$JOBS" ]
    then
        JOBS="$DEFAULT_JOBS"
    fi
    if [ ! "$TARGET" ]
    then
        TARGET=
    fi
fi

USE_SCHEDTOOL=0

if [ "`which schedtool`" != "" ]
then
    (( USE_SCHEDTOOL++ ))
fi

diff() {
    local s=$1
    local e=$2
    A=`expr $e - $s`
    B=`expr $A / 60`
    C=`expr $A % 60`
}

START=`date +%s`

if (( USE_SCHEDTOOL ))
then
    echo "*** schedtool -B -n 1 -e ionice -n 1 make -j $JOBS $TARGET ***"
    schedtool -B -n 1 -e ionice -n 1 make -j $JOBS $TARGET
else
    echo "*** make -j $JOBS $TARGET ***"
    make -j $JOBS $TARGET
fi


END=`date +%s`
diff $START $END
echo "Finished at -> ${B} minutes, ${C} seconds"
