#!/system/xbin/bash

workdir="$EXTERNAL_STORAGE/cm-nightly.d"

msg() { local msg=$1 ; shift ; echo "==> $msg" ; }
err() 
{
  local err=$1 ; shift
  echo "==> ERROR: $err"
  rm -rf $workdir
  exit 1 
}

parseNightly()
{
  local device=$1
  local url="http://mirror.teamdouche.net/?device=${device}"
  [[ ! "$EXTERNAL_STORAGE" ]] && err "Could not detect External Storage location"
  [[ -d "$workdir" ]] && rm -rf $workdir
  mkdir $workdir
  msg "Working... Please wait"
  wget -q $url -O $workdir/index
  [[ "$?" -eq 0 ]] || err "Problem parsing URL"
  local index="$workdir/index"
  local temp="$workdir/tmp.files"
  awk -F'[<>]' '{for(x=1;x<=NF;x++) if($x ~ /.zip$/) print $x}' $index > $temp
  local pattern="cm_${device}_full"
  local zip
  local buildno
  local builds=()
  for zip in $( grep "$pattern" $temp )
  do
    buildno=$( echo "$zip" | tr "-" " " | awk '{print $2}' | tr "." " " | awk '{print $1}' )
    builds[$[${#builds[@]}+1]]=$buildno
  done
  local num
  local file
  for num in ${builds[@]}
  do
    if [ ! -f "$EXTERNAL_STORAGE/$pattern-$num.zip" ]
    then
      msg "\`$pattern-$num.zip' is available"
      echo -n "-> Download now? "
      read download
      case "$download" in
        Y*|y*) file="$pattern-$num.zip"; break ; ;;
      esac
    else
      msg "\`$pattern-$num.zip' exists on $EXTERNAL_STORAGE"
      echo -n "-> Continue with next most recent? "
      read cont
      case "$cont" in
        N*|n*) break ;;
      esac
    fi
  done
  if [ ! "$file" ]
  then
    msg "Not downloading any nightlies..."
  else
    local nightlyDownload="http://mirror.teamdouche.net/get/${device}/${file}"
    msg "Attempting download..."
    wget $nightlyDownload -O $EXTERNAL_STORAGE/$file
    [[ "$?" -eq 0 ]] || err "Error occurred with download"
  fi
}

device=$( getprop ro.product.device )

case "$device" in
  bravo|expresso|hero|heroc|inc|liberty|legend|passion|sholes|supersonic)
    parseNightly $device ;;
  dream|sapphire)
    parseNightly dream_sapphire ;;
  *)
    err "\`$device' not supported" ;;
esac

rm -rf $workdir
